// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift

import Foundation
import Rswift
import UIKit

/// This `R` struct is code generated, and contains references to static resources.
struct R: Rswift.Validatable {
  static func validate() throws {
    try intern.validate()
  }
  
  /// This `R.color` struct is generated, and contains static references to 0 color palettes.
  struct color {
    fileprivate init() {}
  }
  
  /// This `R.file` struct is generated, and contains static references to 0 files.
  struct file {
    fileprivate init() {}
  }
  
  /// This `R.font` struct is generated, and contains static references to 0 fonts.
  struct font {
    fileprivate init() {}
  }
  
  /// This `R.image` struct is generated, and contains static references to 123 images.
  struct image {
    /// Image `bubble_body`.
    static let bubble_body = ImageResource(bundle: _R.hostingBundle, name: "bubble_body")
    /// Image `bubble_left_tail`.
    static let bubble_left_tail = ImageResource(bundle: _R.hostingBundle, name: "bubble_left_tail")
    /// Image `bubble_right_tail`.
    static let bubble_right_tail = ImageResource(bundle: _R.hostingBundle, name: "bubble_right_tail")
    /// Image `button_camera_roll`.
    static let button_camera_roll = ImageResource(bundle: _R.hostingBundle, name: "button_camera_roll")
    /// Image `button_capture_ok`.
    static let button_capture_ok = ImageResource(bundle: _R.hostingBundle, name: "button_capture_ok")
    /// Image `button_capture`.
    static let button_capture = ImageResource(bundle: _R.hostingBundle, name: "button_capture")
    /// Image `button_skill_category`.
    static let button_skill_category = ImageResource(bundle: _R.hostingBundle, name: "button_skill_category")
    /// Image `button_voice_pause`.
    static let button_voice_pause = ImageResource(bundle: _R.hostingBundle, name: "button_voice_pause")
    /// Image `button_voice_play`.
    static let button_voice_play = ImageResource(bundle: _R.hostingBundle, name: "button_voice_play")
    /// Image `button_voice_reset`.
    static let button_voice_reset = ImageResource(bundle: _R.hostingBundle, name: "button_voice_reset")
    /// Image `chat_sharetopicbubble`.
    static let chat_sharetopicbubble = ImageResource(bundle: _R.hostingBundle, name: "chat_sharetopicbubble")
    /// Image `default_avatar_30`.
    static let default_avatar_30 = ImageResource(bundle: _R.hostingBundle, name: "default_avatar_30")
    /// Image `default_avatar_40`.
    static let default_avatar_40 = ImageResource(bundle: _R.hostingBundle, name: "default_avatar_40")
    /// Image `default_avatar_60`.
    static let default_avatar_60 = ImageResource(bundle: _R.hostingBundle, name: "default_avatar_60")
    /// Image `default_avatar`.
    static let default_avatar = ImageResource(bundle: _R.hostingBundle, name: "default_avatar")
    /// Image `feed_audio_bubble`.
    static let feed_audio_bubble = ImageResource(bundle: _R.hostingBundle, name: "feed_audio_bubble")
    /// Image `feed_container_background`.
    static let feed_container_background = ImageResource(bundle: _R.hostingBundle, name: "feed_container_background")
    /// Image `feed_media_add`.
    static let feed_media_add = ImageResource(bundle: _R.hostingBundle, name: "feed_media_add")
    /// Image `feed_skill_channel_arrow`.
    static let feed_skill_channel_arrow = ImageResource(bundle: _R.hostingBundle, name: "feed_skill_channel_arrow")
    /// Image `flat_arrow_down`.
    static let flat_arrow_down = ImageResource(bundle: _R.hostingBundle, name: "flat_arrow_down")
    /// Image `flat_arrow_left`.
    static let flat_arrow_left = ImageResource(bundle: _R.hostingBundle, name: "flat_arrow_left")
    /// Image `gradient_art`.
    static let gradient_art = ImageResource(bundle: _R.hostingBundle, name: "gradient_art")
    /// Image `gradient_life`.
    static let gradient_life = ImageResource(bundle: _R.hostingBundle, name: "gradient_life")
    /// Image `gradient_sport`.
    static let gradient_sport = ImageResource(bundle: _R.hostingBundle, name: "gradient_sport")
    /// Image `gradient_tech`.
    static let gradient_tech = ImageResource(bundle: _R.hostingBundle, name: "gradient_tech")
    /// Image `icon_accessory_mini`.
    static let icon_accessory_mini = ImageResource(bundle: _R.hostingBundle, name: "icon_accessory_mini")
    /// Image `icon_accessory`.
    static let icon_accessory = ImageResource(bundle: _R.hostingBundle, name: "icon_accessory")
    /// Image `icon_arrow_down`.
    static let icon_arrow_down = ImageResource(bundle: _R.hostingBundle, name: "icon_arrow_down")
    /// Image `icon_arrow_up`.
    static let icon_arrow_up = ImageResource(bundle: _R.hostingBundle, name: "icon_arrow_up")
    /// Image `icon_back`.
    static let icon_back = ImageResource(bundle: _R.hostingBundle, name: "icon_back")
    /// Image `icon_blog`.
    static let icon_blog = ImageResource(bundle: _R.hostingBundle, name: "icon_blog")
    /// Image `icon_chat_active_unread`.
    static let icon_chat_active_unread = ImageResource(bundle: _R.hostingBundle, name: "icon_chat_active_unread")
    /// Image `icon_chat_active`.
    static let icon_chat_active = ImageResource(bundle: _R.hostingBundle, name: "icon_chat_active")
    /// Image `icon_chat_unread`.
    static let icon_chat_unread = ImageResource(bundle: _R.hostingBundle, name: "icon_chat_unread")
    /// Image `icon_chat`.
    static let icon_chat = ImageResource(bundle: _R.hostingBundle, name: "icon_chat")
    /// Image `icon_contact_active`.
    static let icon_contact_active = ImageResource(bundle: _R.hostingBundle, name: "icon_contact_active")
    /// Image `icon_contact`.
    static let icon_contact = ImageResource(bundle: _R.hostingBundle, name: "icon_contact")
    /// Image `icon_current_location`.
    static let icon_current_location = ImageResource(bundle: _R.hostingBundle, name: "icon_current_location")
    /// Image `icon_discussion`.
    static let icon_discussion = ImageResource(bundle: _R.hostingBundle, name: "icon_discussion")
    /// Image `icon_dot_failed`.
    static let icon_dot_failed = ImageResource(bundle: _R.hostingBundle, name: "icon_dot_failed")
    /// Image `icon_dot_sending`.
    static let icon_dot_sending = ImageResource(bundle: _R.hostingBundle, name: "icon_dot_sending")
    /// Image `icon_dot_unread`.
    static let icon_dot_unread = ImageResource(bundle: _R.hostingBundle, name: "icon_dot_unread")
    /// Image `icon_dribbble`.
    static let icon_dribbble = ImageResource(bundle: _R.hostingBundle, name: "icon_dribbble")
    /// Image `icon_explore_active`.
    static let icon_explore_active = ImageResource(bundle: _R.hostingBundle, name: "icon_explore_active")
    /// Image `icon_explore`.
    static let icon_explore = ImageResource(bundle: _R.hostingBundle, name: "icon_explore")
    /// Image `icon_feed_text`.
    static let icon_feed_text = ImageResource(bundle: _R.hostingBundle, name: "icon_feed_text")
    /// Image `icon_feeds_active`.
    static let icon_feeds_active = ImageResource(bundle: _R.hostingBundle, name: "icon_feeds_active")
    /// Image `icon_feeds`.
    static let icon_feeds = ImageResource(bundle: _R.hostingBundle, name: "icon_feeds")
    /// Image `icon_ghost`.
    static let icon_ghost = ImageResource(bundle: _R.hostingBundle, name: "icon_ghost")
    /// Image `icon_github`.
    static let icon_github = ImageResource(bundle: _R.hostingBundle, name: "icon_github")
    /// Image `icon_imagepicker_check`.
    static let icon_imagepicker_check = ImageResource(bundle: _R.hostingBundle, name: "icon_imagepicker_check")
    /// Image `icon_instagram`.
    static let icon_instagram = ImageResource(bundle: _R.hostingBundle, name: "icon_instagram")
    /// Image `icon_keyboard`.
    static let icon_keyboard = ImageResource(bundle: _R.hostingBundle, name: "icon_keyboard")
    /// Image `icon_link`.
    static let icon_link = ImageResource(bundle: _R.hostingBundle, name: "icon_link")
    /// Image `icon_list`.
    static let icon_list = ImageResource(bundle: _R.hostingBundle, name: "icon_list")
    /// Image `icon_location_checkmark`.
    static let icon_location_checkmark = ImageResource(bundle: _R.hostingBundle, name: "icon_location_checkmark")
    /// Image `icon_location`.
    static let icon_location = ImageResource(bundle: _R.hostingBundle, name: "icon_location")
    /// Image `icon_me_active`.
    static let icon_me_active = ImageResource(bundle: _R.hostingBundle, name: "icon_me_active")
    /// Image `icon_me`.
    static let icon_me = ImageResource(bundle: _R.hostingBundle, name: "icon_me")
    /// Image `icon_media_delete`.
    static let icon_media_delete = ImageResource(bundle: _R.hostingBundle, name: "icon_media_delete")
    /// Image `icon_minicard`.
    static let icon_minicard = ImageResource(bundle: _R.hostingBundle, name: "icon_minicard")
    /// Image `icon_more_image`.
    static let icon_more_image = ImageResource(bundle: _R.hostingBundle, name: "icon_more_image")
    /// Image `icon_more`.
    static let icon_more = ImageResource(bundle: _R.hostingBundle, name: "icon_more")
    /// Image `icon_pause`.
    static let icon_pause = ImageResource(bundle: _R.hostingBundle, name: "icon_pause")
    /// Image `icon_pin_mini_gray`.
    static let icon_pin_mini_gray = ImageResource(bundle: _R.hostingBundle, name: "icon_pin_mini_gray")
    /// Image `icon_pin_shadow`.
    static let icon_pin_shadow = ImageResource(bundle: _R.hostingBundle, name: "icon_pin_shadow")
    /// Image `icon_pin`.
    static let icon_pin = ImageResource(bundle: _R.hostingBundle, name: "icon_pin")
    /// Image `icon_play`.
    static let icon_play = ImageResource(bundle: _R.hostingBundle, name: "icon_play")
    /// Image `icon_playvideo`.
    static let icon_playvideo = ImageResource(bundle: _R.hostingBundle, name: "icon_playvideo")
    /// Image `icon_profile_phone`.
    static let icon_profile_phone = ImageResource(bundle: _R.hostingBundle, name: "icon_profile_phone")
    /// Image `icon_quick_camera`.
    static let icon_quick_camera = ImageResource(bundle: _R.hostingBundle, name: "icon_quick_camera")
    /// Image `icon_remove`.
    static let icon_remove = ImageResource(bundle: _R.hostingBundle, name: "icon_remove")
    /// Image `icon_repo`.
    static let icon_repo = ImageResource(bundle: _R.hostingBundle, name: "icon_repo")
    /// Image `icon_settings`.
    static let icon_settings = ImageResource(bundle: _R.hostingBundle, name: "icon_settings")
    /// Image `icon_share`.
    static let icon_share = ImageResource(bundle: _R.hostingBundle, name: "icon_share")
    /// Image `icon_skill_art`.
    static let icon_skill_art = ImageResource(bundle: _R.hostingBundle, name: "icon_skill_art")
    /// Image `icon_skill_ball`.
    static let icon_skill_ball = ImageResource(bundle: _R.hostingBundle, name: "icon_skill_ball")
    /// Image `icon_skill_category_arrow`.
    static let icon_skill_category_arrow = ImageResource(bundle: _R.hostingBundle, name: "icon_skill_category_arrow")
    /// Image `icon_skill_life`.
    static let icon_skill_life = ImageResource(bundle: _R.hostingBundle, name: "icon_skill_life")
    /// Image `icon_skill_music`.
    static let icon_skill_music = ImageResource(bundle: _R.hostingBundle, name: "icon_skill_music")
    /// Image `icon_skill_tech`.
    static let icon_skill_tech = ImageResource(bundle: _R.hostingBundle, name: "icon_skill_tech")
    /// Image `icon_stars`.
    static let icon_stars = ImageResource(bundle: _R.hostingBundle, name: "icon_stars")
    /// Image `icon_subscribe_close`.
    static let icon_subscribe_close = ImageResource(bundle: _R.hostingBundle, name: "icon_subscribe_close")
    /// Image `icon_subscribe_notify`.
    static let icon_subscribe_notify = ImageResource(bundle: _R.hostingBundle, name: "icon_subscribe_notify")
    /// Image `icon_topic_reddot`.
    static let icon_topic_reddot = ImageResource(bundle: _R.hostingBundle, name: "icon_topic_reddot")
    /// Image `icon_topic_text`.
    static let icon_topic_text = ImageResource(bundle: _R.hostingBundle, name: "icon_topic_text")
    /// Image `icon_topic`.
    static let icon_topic = ImageResource(bundle: _R.hostingBundle, name: "icon_topic")
    /// Image `icon_voice_left`.
    static let icon_voice_left = ImageResource(bundle: _R.hostingBundle, name: "icon_voice_left")
    /// Image `icon_voice_right`.
    static let icon_voice_right = ImageResource(bundle: _R.hostingBundle, name: "icon_voice_right")
    /// Image `image_rectangle_border`.
    static let image_rectangle_border = ImageResource(bundle: _R.hostingBundle, name: "image_rectangle_border")
    /// Image `item_mic`.
    static let item_mic = ImageResource(bundle: _R.hostingBundle, name: "item_mic")
    /// Image `item_more`.
    static let item_more = ImageResource(bundle: _R.hostingBundle, name: "item_more")
    /// Image `left_tail_bubble`.
    static let left_tail_bubble = ImageResource(bundle: _R.hostingBundle, name: "left_tail_bubble")
    /// Image `left_tail_image_bubble_border`.
    static let left_tail_image_bubble_border = ImageResource(bundle: _R.hostingBundle, name: "left_tail_image_bubble_border")
    /// Image `left_tail_image_bubble`.
    static let left_tail_image_bubble = ImageResource(bundle: _R.hostingBundle, name: "left_tail_image_bubble")
    /// Image `location_bottom_shadow`.
    static let location_bottom_shadow = ImageResource(bundle: _R.hostingBundle, name: "location_bottom_shadow")
    /// Image `minicard_bubble_more`.
    static let minicard_bubble_more = ImageResource(bundle: _R.hostingBundle, name: "minicard_bubble_more")
    /// Image `minicard_bubble`.
    static let minicard_bubble = ImageResource(bundle: _R.hostingBundle, name: "minicard_bubble")
    /// Image `pick_skills_dismiss_background`.
    static let pick_skills_dismiss_background = ImageResource(bundle: _R.hostingBundle, name: "pick_skills_dismiss_background")
    /// Image `profile_avatar_frame`.
    static let profile_avatar_frame = ImageResource(bundle: _R.hostingBundle, name: "profile_avatar_frame")
    /// Image `right_tail_bubble`.
    static let right_tail_bubble = ImageResource(bundle: _R.hostingBundle, name: "right_tail_bubble")
    /// Image `right_tail_image_bubble_border`.
    static let right_tail_image_bubble_border = ImageResource(bundle: _R.hostingBundle, name: "right_tail_image_bubble_border")
    /// Image `right_tail_image_bubble`.
    static let right_tail_image_bubble = ImageResource(bundle: _R.hostingBundle, name: "right_tail_image_bubble")
    /// Image `searchbar_textfield_background`.
    static let searchbar_textfield_background = ImageResource(bundle: _R.hostingBundle, name: "searchbar_textfield_background")
    /// Image `share_feed_bubble_left`.
    static let share_feed_bubble_left = ImageResource(bundle: _R.hostingBundle, name: "share_feed_bubble_left")
    /// Image `skill_add`.
    static let skill_add = ImageResource(bundle: _R.hostingBundle, name: "skill_add")
    /// Image `skill_bubble_empty_gray`.
    static let skill_bubble_empty_gray = ImageResource(bundle: _R.hostingBundle, name: "skill_bubble_empty_gray")
    /// Image `skill_bubble_empty`.
    static let skill_bubble_empty = ImageResource(bundle: _R.hostingBundle, name: "skill_bubble_empty")
    /// Image `skill_bubble_large_empty`.
    static let skill_bubble_large_empty = ImageResource(bundle: _R.hostingBundle, name: "skill_bubble_large_empty")
    /// Image `skill_bubble_large`.
    static let skill_bubble_large = ImageResource(bundle: _R.hostingBundle, name: "skill_bubble_large")
    /// Image `skill_bubble`.
    static let skill_bubble = ImageResource(bundle: _R.hostingBundle, name: "skill_bubble")
    /// Image `social_media_image_mask_full`.
    static let social_media_image_mask_full = ImageResource(bundle: _R.hostingBundle, name: "social_media_image_mask_full")
    /// Image `social_media_image_mask`.
    static let social_media_image_mask = ImageResource(bundle: _R.hostingBundle, name: "social_media_image_mask")
    /// Image `social_work_border_line`.
    static let social_work_border_line = ImageResource(bundle: _R.hostingBundle, name: "social_work_border_line")
    /// Image `social_work_border`.
    static let social_work_border = ImageResource(bundle: _R.hostingBundle, name: "social_work_border")
    /// Image `swipe_up`.
    static let swipe_up = ImageResource(bundle: _R.hostingBundle, name: "swipe_up")
    /// Image `top_shadow`.
    static let top_shadow = ImageResource(bundle: _R.hostingBundle, name: "top_shadow")
    /// Image `unread_red_dot`.
    static let unread_red_dot = ImageResource(bundle: _R.hostingBundle, name: "unread_red_dot")
    /// Image `url_container_left_background`.
    static let url_container_left_background = ImageResource(bundle: _R.hostingBundle, name: "url_container_left_background")
    /// Image `url_container_right_background`.
    static let url_container_right_background = ImageResource(bundle: _R.hostingBundle, name: "url_container_right_background")
    /// Image `voice_indicator`.
    static let voice_indicator = ImageResource(bundle: _R.hostingBundle, name: "voice_indicator")
    /// Image `white`.
    static let white = ImageResource(bundle: _R.hostingBundle, name: "white")
    /// Image `yep_icon_solo`.
    static let yep_icon_solo = ImageResource(bundle: _R.hostingBundle, name: "yep_icon_solo")
    
    /// `UIImage(named: "bubble_body", bundle: ..., traitCollection: ...)`
    static func bubble_body(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.bubble_body, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "bubble_left_tail", bundle: ..., traitCollection: ...)`
    static func bubble_left_tail(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.bubble_left_tail, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "bubble_right_tail", bundle: ..., traitCollection: ...)`
    static func bubble_right_tail(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.bubble_right_tail, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "button_camera_roll", bundle: ..., traitCollection: ...)`
    static func button_camera_roll(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.button_camera_roll, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "button_capture", bundle: ..., traitCollection: ...)`
    static func button_capture(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.button_capture, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "button_capture_ok", bundle: ..., traitCollection: ...)`
    static func button_capture_ok(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.button_capture_ok, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "button_skill_category", bundle: ..., traitCollection: ...)`
    static func button_skill_category(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.button_skill_category, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "button_voice_pause", bundle: ..., traitCollection: ...)`
    static func button_voice_pause(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.button_voice_pause, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "button_voice_play", bundle: ..., traitCollection: ...)`
    static func button_voice_play(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.button_voice_play, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "button_voice_reset", bundle: ..., traitCollection: ...)`
    static func button_voice_reset(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.button_voice_reset, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "chat_sharetopicbubble", bundle: ..., traitCollection: ...)`
    static func chat_sharetopicbubble(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.chat_sharetopicbubble, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "default_avatar", bundle: ..., traitCollection: ...)`
    static func default_avatar(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.default_avatar, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "default_avatar_30", bundle: ..., traitCollection: ...)`
    static func default_avatar_30(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.default_avatar_30, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "default_avatar_40", bundle: ..., traitCollection: ...)`
    static func default_avatar_40(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.default_avatar_40, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "default_avatar_60", bundle: ..., traitCollection: ...)`
    static func default_avatar_60(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.default_avatar_60, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "feed_audio_bubble", bundle: ..., traitCollection: ...)`
    static func feed_audio_bubble(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.feed_audio_bubble, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "feed_container_background", bundle: ..., traitCollection: ...)`
    static func feed_container_background(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.feed_container_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "feed_media_add", bundle: ..., traitCollection: ...)`
    static func feed_media_add(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.feed_media_add, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "feed_skill_channel_arrow", bundle: ..., traitCollection: ...)`
    static func feed_skill_channel_arrow(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.feed_skill_channel_arrow, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "flat_arrow_down", bundle: ..., traitCollection: ...)`
    static func flat_arrow_down(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.flat_arrow_down, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "flat_arrow_left", bundle: ..., traitCollection: ...)`
    static func flat_arrow_left(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.flat_arrow_left, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "gradient_art", bundle: ..., traitCollection: ...)`
    static func gradient_art(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.gradient_art, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "gradient_life", bundle: ..., traitCollection: ...)`
    static func gradient_life(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.gradient_life, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "gradient_sport", bundle: ..., traitCollection: ...)`
    static func gradient_sport(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.gradient_sport, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "gradient_tech", bundle: ..., traitCollection: ...)`
    static func gradient_tech(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.gradient_tech, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_accessory", bundle: ..., traitCollection: ...)`
    static func icon_accessory(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_accessory, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_accessory_mini", bundle: ..., traitCollection: ...)`
    static func icon_accessory_mini(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_accessory_mini, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_arrow_down", bundle: ..., traitCollection: ...)`
    static func icon_arrow_down(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_arrow_down, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_arrow_up", bundle: ..., traitCollection: ...)`
    static func icon_arrow_up(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_arrow_up, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_back", bundle: ..., traitCollection: ...)`
    static func icon_back(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_back, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_blog", bundle: ..., traitCollection: ...)`
    static func icon_blog(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_blog, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_chat", bundle: ..., traitCollection: ...)`
    static func icon_chat(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_chat, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_chat_active", bundle: ..., traitCollection: ...)`
    static func icon_chat_active(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_chat_active, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_chat_active_unread", bundle: ..., traitCollection: ...)`
    static func icon_chat_active_unread(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_chat_active_unread, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_chat_unread", bundle: ..., traitCollection: ...)`
    static func icon_chat_unread(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_chat_unread, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_contact", bundle: ..., traitCollection: ...)`
    static func icon_contact(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_contact, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_contact_active", bundle: ..., traitCollection: ...)`
    static func icon_contact_active(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_contact_active, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_current_location", bundle: ..., traitCollection: ...)`
    static func icon_current_location(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_current_location, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_discussion", bundle: ..., traitCollection: ...)`
    static func icon_discussion(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_discussion, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_dot_failed", bundle: ..., traitCollection: ...)`
    static func icon_dot_failed(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_dot_failed, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_dot_sending", bundle: ..., traitCollection: ...)`
    static func icon_dot_sending(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_dot_sending, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_dot_unread", bundle: ..., traitCollection: ...)`
    static func icon_dot_unread(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_dot_unread, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_dribbble", bundle: ..., traitCollection: ...)`
    static func icon_dribbble(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_dribbble, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_explore", bundle: ..., traitCollection: ...)`
    static func icon_explore(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_explore, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_explore_active", bundle: ..., traitCollection: ...)`
    static func icon_explore_active(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_explore_active, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_feed_text", bundle: ..., traitCollection: ...)`
    static func icon_feed_text(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_feed_text, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_feeds", bundle: ..., traitCollection: ...)`
    static func icon_feeds(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_feeds, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_feeds_active", bundle: ..., traitCollection: ...)`
    static func icon_feeds_active(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_feeds_active, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_ghost", bundle: ..., traitCollection: ...)`
    static func icon_ghost(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_ghost, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_github", bundle: ..., traitCollection: ...)`
    static func icon_github(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_github, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_imagepicker_check", bundle: ..., traitCollection: ...)`
    static func icon_imagepicker_check(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_imagepicker_check, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_instagram", bundle: ..., traitCollection: ...)`
    static func icon_instagram(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_instagram, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_keyboard", bundle: ..., traitCollection: ...)`
    static func icon_keyboard(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_keyboard, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_link", bundle: ..., traitCollection: ...)`
    static func icon_link(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_link, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_list", bundle: ..., traitCollection: ...)`
    static func icon_list(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_list, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_location", bundle: ..., traitCollection: ...)`
    static func icon_location(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_location, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_location_checkmark", bundle: ..., traitCollection: ...)`
    static func icon_location_checkmark(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_location_checkmark, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_me", bundle: ..., traitCollection: ...)`
    static func icon_me(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_me, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_me_active", bundle: ..., traitCollection: ...)`
    static func icon_me_active(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_me_active, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_media_delete", bundle: ..., traitCollection: ...)`
    static func icon_media_delete(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_media_delete, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_minicard", bundle: ..., traitCollection: ...)`
    static func icon_minicard(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_minicard, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_more", bundle: ..., traitCollection: ...)`
    static func icon_more(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_more, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_more_image", bundle: ..., traitCollection: ...)`
    static func icon_more_image(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_more_image, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_pause", bundle: ..., traitCollection: ...)`
    static func icon_pause(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_pause, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_pin", bundle: ..., traitCollection: ...)`
    static func icon_pin(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_pin, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_pin_mini_gray", bundle: ..., traitCollection: ...)`
    static func icon_pin_mini_gray(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_pin_mini_gray, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_pin_shadow", bundle: ..., traitCollection: ...)`
    static func icon_pin_shadow(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_pin_shadow, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_play", bundle: ..., traitCollection: ...)`
    static func icon_play(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_play, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_playvideo", bundle: ..., traitCollection: ...)`
    static func icon_playvideo(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_playvideo, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_profile_phone", bundle: ..., traitCollection: ...)`
    static func icon_profile_phone(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_profile_phone, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_quick_camera", bundle: ..., traitCollection: ...)`
    static func icon_quick_camera(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_quick_camera, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_remove", bundle: ..., traitCollection: ...)`
    static func icon_remove(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_remove, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_repo", bundle: ..., traitCollection: ...)`
    static func icon_repo(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_repo, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_settings", bundle: ..., traitCollection: ...)`
    static func icon_settings(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_settings, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_share", bundle: ..., traitCollection: ...)`
    static func icon_share(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_share, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_skill_art", bundle: ..., traitCollection: ...)`
    static func icon_skill_art(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_skill_art, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_skill_ball", bundle: ..., traitCollection: ...)`
    static func icon_skill_ball(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_skill_ball, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_skill_category_arrow", bundle: ..., traitCollection: ...)`
    static func icon_skill_category_arrow(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_skill_category_arrow, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_skill_life", bundle: ..., traitCollection: ...)`
    static func icon_skill_life(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_skill_life, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_skill_music", bundle: ..., traitCollection: ...)`
    static func icon_skill_music(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_skill_music, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_skill_tech", bundle: ..., traitCollection: ...)`
    static func icon_skill_tech(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_skill_tech, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_stars", bundle: ..., traitCollection: ...)`
    static func icon_stars(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_stars, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_subscribe_close", bundle: ..., traitCollection: ...)`
    static func icon_subscribe_close(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_subscribe_close, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_subscribe_notify", bundle: ..., traitCollection: ...)`
    static func icon_subscribe_notify(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_subscribe_notify, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_topic", bundle: ..., traitCollection: ...)`
    static func icon_topic(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_topic, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_topic_reddot", bundle: ..., traitCollection: ...)`
    static func icon_topic_reddot(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_topic_reddot, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_topic_text", bundle: ..., traitCollection: ...)`
    static func icon_topic_text(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_topic_text, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_voice_left", bundle: ..., traitCollection: ...)`
    static func icon_voice_left(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_voice_left, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_voice_right", bundle: ..., traitCollection: ...)`
    static func icon_voice_right(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.icon_voice_right, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "image_rectangle_border", bundle: ..., traitCollection: ...)`
    static func image_rectangle_border(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.image_rectangle_border, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "item_mic", bundle: ..., traitCollection: ...)`
    static func item_mic(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.item_mic, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "item_more", bundle: ..., traitCollection: ...)`
    static func item_more(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.item_more, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "left_tail_bubble", bundle: ..., traitCollection: ...)`
    static func left_tail_bubble(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.left_tail_bubble, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "left_tail_image_bubble", bundle: ..., traitCollection: ...)`
    static func left_tail_image_bubble(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.left_tail_image_bubble, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "left_tail_image_bubble_border", bundle: ..., traitCollection: ...)`
    static func left_tail_image_bubble_border(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.left_tail_image_bubble_border, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "location_bottom_shadow", bundle: ..., traitCollection: ...)`
    static func location_bottom_shadow(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.location_bottom_shadow, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "minicard_bubble", bundle: ..., traitCollection: ...)`
    static func minicard_bubble(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.minicard_bubble, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "minicard_bubble_more", bundle: ..., traitCollection: ...)`
    static func minicard_bubble_more(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.minicard_bubble_more, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "pick_skills_dismiss_background", bundle: ..., traitCollection: ...)`
    static func pick_skills_dismiss_background(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.pick_skills_dismiss_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "profile_avatar_frame", bundle: ..., traitCollection: ...)`
    static func profile_avatar_frame(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.profile_avatar_frame, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "right_tail_bubble", bundle: ..., traitCollection: ...)`
    static func right_tail_bubble(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.right_tail_bubble, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "right_tail_image_bubble", bundle: ..., traitCollection: ...)`
    static func right_tail_image_bubble(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.right_tail_image_bubble, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "right_tail_image_bubble_border", bundle: ..., traitCollection: ...)`
    static func right_tail_image_bubble_border(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.right_tail_image_bubble_border, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "searchbar_textfield_background", bundle: ..., traitCollection: ...)`
    static func searchbar_textfield_background(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.searchbar_textfield_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "share_feed_bubble_left", bundle: ..., traitCollection: ...)`
    static func share_feed_bubble_left(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.share_feed_bubble_left, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "skill_add", bundle: ..., traitCollection: ...)`
    static func skill_add(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.skill_add, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "skill_bubble", bundle: ..., traitCollection: ...)`
    static func skill_bubble(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.skill_bubble, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "skill_bubble_empty", bundle: ..., traitCollection: ...)`
    static func skill_bubble_empty(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.skill_bubble_empty, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "skill_bubble_empty_gray", bundle: ..., traitCollection: ...)`
    static func skill_bubble_empty_gray(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.skill_bubble_empty_gray, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "skill_bubble_large", bundle: ..., traitCollection: ...)`
    static func skill_bubble_large(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.skill_bubble_large, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "skill_bubble_large_empty", bundle: ..., traitCollection: ...)`
    static func skill_bubble_large_empty(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.skill_bubble_large_empty, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "social_media_image_mask", bundle: ..., traitCollection: ...)`
    static func social_media_image_mask(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.social_media_image_mask, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "social_media_image_mask_full", bundle: ..., traitCollection: ...)`
    static func social_media_image_mask_full(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.social_media_image_mask_full, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "social_work_border", bundle: ..., traitCollection: ...)`
    static func social_work_border(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.social_work_border, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "social_work_border_line", bundle: ..., traitCollection: ...)`
    static func social_work_border_line(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.social_work_border_line, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "swipe_up", bundle: ..., traitCollection: ...)`
    static func swipe_up(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.swipe_up, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "top_shadow", bundle: ..., traitCollection: ...)`
    static func top_shadow(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.top_shadow, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "unread_red_dot", bundle: ..., traitCollection: ...)`
    static func unread_red_dot(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.unread_red_dot, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "url_container_left_background", bundle: ..., traitCollection: ...)`
    static func url_container_left_background(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.url_container_left_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "url_container_right_background", bundle: ..., traitCollection: ...)`
    static func url_container_right_background(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.url_container_right_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "voice_indicator", bundle: ..., traitCollection: ...)`
    static func voice_indicator(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.voice_indicator, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "white", bundle: ..., traitCollection: ...)`
    static func white(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.white, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "yep_icon_solo", bundle: ..., traitCollection: ...)`
    static func yep_icon_solo(compatibleWith traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.yep_icon_solo, compatibleWith: traitCollection)
    }
    
    fileprivate init() {}
  }
  
  private struct intern: Rswift.Validatable {
    static func validate() throws {
      try _R.validate()
    }
    
    fileprivate init() {}
  }
  
  /// This `R.nib` struct is generated, and contains static references to 0 nibs.
  struct nib {
    fileprivate init() {}
  }
  
  /// This `R.reuseIdentifier` struct is generated, and contains static references to 0 reuse identifiers.
  struct reuseIdentifier {
    fileprivate init() {}
  }
  
  /// This `R.segue` struct is generated, and contains static references to 0 view controllers.
  struct segue {
    fileprivate init() {}
  }
  
  /// This `R.storyboard` struct is generated, and contains static references to 3 storyboards.
  struct storyboard {
    /// Storyboard `LaunchScreen`.
    static let launchScreen = _R.storyboard.launchScreen()
    /// Storyboard `Main`.
    static let main = _R.storyboard.main()
    /// Storyboard `NewFeedVoiceRecord`.
    static let newFeedVoiceRecord = _R.storyboard.newFeedVoiceRecord()
    
    /// `UIStoryboard(name: "LaunchScreen", bundle: ...)`
    static func launchScreen(_: Void = ()) -> UIStoryboard {
      return UIStoryboard(resource: R.storyboard.launchScreen)
    }
    
    /// `UIStoryboard(name: "Main", bundle: ...)`
    static func main(_: Void = ()) -> UIStoryboard {
      return UIStoryboard(resource: R.storyboard.main)
    }
    
    /// `UIStoryboard(name: "NewFeedVoiceRecord", bundle: ...)`
    static func newFeedVoiceRecord(_: Void = ()) -> UIStoryboard {
      return UIStoryboard(resource: R.storyboard.newFeedVoiceRecord)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.string` struct is generated, and contains static references to 0 localization tables.
  struct string {
    fileprivate init() {}
  }
  
  fileprivate init() {}
}

struct _R: Rswift.Validatable {
  static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap(Locale.init) ?? Locale.current
  static let hostingBundle = Bundle(identifier: "gg.swift.t.RxYepRecord") ?? Bundle.main
  
  static func validate() throws {
    try storyboard.validate()
  }
  
  struct nib {
    fileprivate init() {}
  }
  
  struct storyboard: Rswift.Validatable {
    static func validate() throws {
      try newFeedVoiceRecord.validate()
    }
    
    struct launchScreen: StoryboardResourceWithInitialControllerType {
      typealias InitialController = UIViewController
      
      let bundle = _R.hostingBundle
      let name = "LaunchScreen"
      
      fileprivate init() {}
    }
    
    struct main: StoryboardResourceWithInitialControllerType {
      typealias InitialController = UIViewController
      
      let bundle = _R.hostingBundle
      let name = "Main"
      
      fileprivate init() {}
    }
    
    struct newFeedVoiceRecord: StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = UINavigationController
      
      let bundle = _R.hostingBundle
      let name = "NewFeedVoiceRecord"
      let newFeedVoiceRecordViewController = StoryboardViewControllerResource<NewFeedVoiceRecordViewController>(identifier: "NewFeedVoiceRecordViewController")
      
      func newFeedVoiceRecordViewController(_: Void = ()) -> NewFeedVoiceRecordViewController? {
        return UIStoryboard(resource: self).instantiateViewController(withResource: newFeedVoiceRecordViewController)
      }
      
      static func validate() throws {
        if UIImage(named: "button_voice_reset") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'button_voice_reset' is used in storyboard 'NewFeedVoiceRecord', but couldn't be loaded.") }
        if UIImage(named: "voice_indicator") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'voice_indicator' is used in storyboard 'NewFeedVoiceRecord', but couldn't be loaded.") }
        if UIImage(named: "button_voice_play") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'button_voice_play' is used in storyboard 'NewFeedVoiceRecord', but couldn't be loaded.") }
        if _R.storyboard.newFeedVoiceRecord().newFeedVoiceRecordViewController() == nil { throw Rswift.ValidationError(description:"[R.swift] ViewController with identifier 'newFeedVoiceRecordViewController' could not be loaded from storyboard 'NewFeedVoiceRecord' as 'NewFeedVoiceRecordViewController'.") }
      }
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  fileprivate init() {}
}